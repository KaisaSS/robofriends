{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","constants.js","Containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","CHANGE_SEARCHFIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","App","dispatch","useDispatch","searchField","useSelector","searchRobots","requestRobots","isPending","onRequestRobots","fetch","then","response","json","data","payload","catch","useEffect","filreredRobots","filter","robot","toLowerCase","includes","event","text","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b717c46.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Card = ({ name, email, id }) => {\n  // const { name, email, id } = props;\n  return (\n    <div className=\"bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\n      <img alt=\"robopic\" src={`https://robohash.org/${id}?200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  return (\n    <div>\n      {robots.map((user, i) => {\n        return <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />;\n      })}{\" \"}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b-green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search Robots...\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return <div style={{ overflowY: \"scroll\", border: \"1px solid black\", height: \"80vh\" }}>{props.children}</div>;\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Ooops...That is not good!</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","export const CHANGE_SEARCHFIELD = \"CHANGE_SEARCHFIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CardList from \"../Components/CardList\";\nimport SearchBox from \"../Components/SearchBox\";\nimport Scroll from \"../Components/Scroll\";\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\nimport \"./App.css\";\nimport { setSearchField, requestRobots } from \"../actions\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const { searchField } = useSelector((state) => state.searchRobots);\n  const { robots, isPending } = useSelector((state) => state.requestRobots);\n\n  const onSearchChange = (event) => {\n    dispatch(setSearchField(event.target.value));\n  };\n\n  const onRequestRobots = () => {\n    dispatch(requestRobots());\n  };\n\n  useEffect(() => {\n    onRequestRobots();\n  }, []);\n\n  const filreredRobots = robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\n  });\n\n  return isPending ? (\n    <h1>Loading...</h1>\n  ) : (\n    <div className=\"tc\">\n      <div className=\"title-container\">\n        <h1 className=\"title logo\">\n          <i className=\"fas fa-robot\"></i>\n        </h1>\n        <h1 className=\"title\">RoboFriends</h1>\n      </div>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <ErrorBoundry>\n          <CardList robots={filreredRobots} />\n        </ErrorBoundry>\n      </Scroll>\n    </div>\n  );\n};\nexport default App;\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCHFIELD,\n  payload: text,\n});\n\nexport const requestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then((response) => response.json())\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch((error) => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: error }));\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  CHANGE_SEARCHFIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants\";\n\nconst initialStateSearch = {\n  searchField: \"\",\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCHFIELD:\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\",\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      return Object.assign({}, state, { robots: action.payload, isPending: false });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, { error: action.payload, isPending: false });\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport \"tachyons\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}